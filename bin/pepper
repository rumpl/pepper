#!/usr/bin/env php
<?php
/** Pepper
 *
 * The MIT License (MIT)
 * Copyright © 2013 Djordje Lukic, http://rumpl.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the “Software”), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

require __DIR__ . '/../vendor/autoload.php';

use Pepper\Report\ConsoleReport;
use Pepper\Pepper;
use Symfony\Component\Yaml\Yaml;
use Colors\Color;
use Ulrichsg\Getopt;

$color = new Color;

print $color->fg('green', 'Pepper 0.0.1 by Djordje Lukic') . PHP_EOL . PHP_EOL;

try {
    $options = new Getopt(array(
        array('f', 'file', Getopt::REQUIRED_ARGUMENT, 'File to analyze'),
        array('c', 'configuration', Getopt::REQUIRED_ARGUMENT, 'Alternatie configuration file'),
        array('h', 'help', Getopt::NO_ARGUMENT, 'Show this help'),
    ));

    $options->parse();

    if ($options->getOption('h') || count($options->getOptions()) === 0) {
        $options->showHelp();
        exit(0);
    }

    $conf = $options->getOption('c');
    if ($conf === null) {
        $conf = './pepperconfig.yml';
    }

    $ar = Yaml::parse(__DIR__ . '/config.yml');
    $par = Yaml::parse($conf);

    $pepper = new Pepper(new ConsoleReport($ar, $par, new Color), $par);

    $report = $pepper->analyzeFile($options->getOption('file'));
    $report->dump();
} catch (Exception $e) {
    print $color->fg('red', $e->getMessage()) . PHP_EOL . PHP_EOL;
}
